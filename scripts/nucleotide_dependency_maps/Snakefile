configfile: "config.yaml"


# put in config ?
models = [
    "gonzalobenegas/gpn-brassicales",
]

sequences = [
    "GCF_000001735.4",
]

region = {"start": 0, "end": 100}


def generate_file(wildcards):
    position = config["POSITION"]
    f"output/display_dependency_map/{wildcards.model}/{wildcards.sequence}/ndm_{position.chromosome}_{position.start}_{position.end}.png"


rule all:
    input:
        expand(
            "output/compute_dependency_map/{model}/{sequence}/ndm_{chromosome}_{start}_{end}.png",
            model=models,
            sequence=sequences,
            chromosome=config["CHROMOSOME"],
            start=config["START_POSITION"],
            end=config["END_POSITION"],
        ),


rule download_fasta:
    params:
        url=lambda wildcards: config["FASTA_URL"].get(wildcards.sequence),
    output:
        "output/download_fasta/{sequence}.fna.gz",
    shell:
        "wget --no-check-certificate {params.url} -O {output}"


rule compute_dependency_map:
    input:
        "output/download_fasta/{sequence}.fna.gz",
    params:
        model=lambda wildcards: wildcards.model,
    output:
        # "output/compute_dependency_map/{model}/{sequence}/ndm_{chromosome}_{start}_{end}.parquet",
        "output/compute_dependency_map/{model}/{sequence}/ndm_{chromosome}_{start}_{end}.{format}",
    script:
        "scripts/compute_dependency_map.py"


# rule display_dependency_map:
#     input:
#         "output/compute_dependency_map/{model}/{sequence}/ndm_{chromosome}_{start}_{end}.parquet",
#     output:
#         "output/display_dependency_map/{model}/{sequence}/ndm_{chromosome}_{start}_{end}.{format}",
#     script:
#         "scripts/display_dependency_map.py"
